[
    {
        "name": "Home Controller",
        "image": "/images/home-controller.jpg",
        "link": "https://github.com/Benjatron87/arduino-home-app",
        "url": "home-controller",
        "summary": "This application combines my love of software with my love of hardware. I utilized the wifi capabilities of the NodeMCU IoT device to control a series of relay switches that power some lights and a fan in my bedroom. I wrote code for this device using the Arduino IDE. The device also send temperature data and the status of my door (open/closed). The whole system is controlled from a heroku deployed website that has buttons that are synced with a MySql database so that the status of the switches are saved. The website also displays the temperature of my room and if my door is open or closed.",
        "details": "/portfolio/home-controller"
    },
    {
        "name": "Launch App",
        "image": "/images/placeholder-rocket.png",
        "link": "https://github.com/Benjatron87/Final-Project",
        "url": "launch-app",
        "summary": "This group project was for the UNC Chapel Hill Coding Bootcamp. My group designed this launch tracking app using a proposal from the company Carimus. The app itself utilizes a Node.js backend, connected to MongoDB to store user data. The front end uses React with redux state management. The app allows a user to login either with Facebook, Gmail, or as a guest. You can then follow upcoming lauches and keep up with the latest news on said launches. The app's backbone comes from launchlibrary.net's API as well as spaceflightnewsapi.com's API.",
        "details": "/portfolio/launch-app",
        "deployed": "https://launchtrackerapp.herokuapp.com/"
    },
    {
        "name": "Wifi Car",
        "image": "/images/wifi-car.gif",
        "link": "https://github.com/Benjatron87/Wifi-Controlled-Car",
        "url": "wifi-car",
        "summary": "Similar to the Home Controller App present in this portfolio, this project involves IoT and a NodeMCU. The front end is about as  simple as it gets. Five buttons control the direction of the little car (Forward, Backward, Left, Right, and Stop). These buttons manipulate the API, which is suspended by the Node.js backend. This API however, is not linked to a database because it does not need to be. The API is a single object that has a 'direction' key that, depending on the last button pressed, changes anywhere between 0-4. The NodeMCU can get that single number and decide which pins to fire which gives power to the motors." ,
        "details": "/portfolio/wifi-car"
    },
    {
        "name": "Portfolio",
        "image": "/images/Facepic.png",
        "link": "https://github.com/Benjatron87/react-portfolio",
        "url": "portfolio",
        "summary": "Seeing as you're currently reading this, you have had a chance to look through some of this app. It uses a Node.js server for the back-end, and the front-end is rendered using React. The back-end is fairly basic other than the email handling. I am using nodemailer to make the 'Contact Me' page useable. It is being hosted on Heroku.",
        "details": "/portfolio/portfolio",
        "deployed": "https://benj-thomsen-portfolio.herokuapp.com/"
    },
    {
        "name": "Flappy Disc",
        "image": "/images/disc.gif",
        "link": "https://github.com/Benjatron87/2D-js-game",
        "url": "flappy-disc",
        "summary": "This is a game I made based off the once popular iPhone game, 'flappy bird'. I made it one day while messing around with the HTML canvas tag. I realized that the canvas is a basic x/y coordinate plane, and with my background in physics, making the disc fly was a simple position change due to gravity equation. Obviously my love for the sport of Ultimate Frisbee comes to light with this project. While the canvas is a set size, and not responsive, the app is touch sensitive and can be played on an iPhone. However, I cannot promise it will fit on your screen.",
        "details": "/portfolio/flappy-disc",
        "deployed": "https://benjatron87.github.io/2D-js-game/"
    },
    {
        "name": "News Scraper",
        "image": "/images/newsimage.png",
        "link": "https://github.com/Benjatron87/news-scraper",
        "url": "news-scraper",
        "summary": "This is a simple application that uses the 'cheerio' web scraper to parse article information from the NY Times website. It then renders the top 5 articles using express-handlebars. The Node.js backend is linked to MongoDB so that you can save a particular article, to then read later. This was a homework assignment for the UNC Chapel Hill Coding Bootcamp that was designed to get us more familiar with MongoDB as well as a Javascript framework for rendering HTML before we started on React.",
        "details": "/portfolio/news-scraper",
        "deployed": "https://benjs-news-scraper-app.herokuapp.com/"
    }
]